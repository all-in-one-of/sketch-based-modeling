\ifx\isEmbedded\undefined
\input{../format/format-setup}
\begin{document}
\fi
\chapter{Literature Review}
\label{chap:literature}

Because the deformation technique and correspondence matching is quite essential and critical during registration, in this chapter, the related works on 3D geometric deformation, 3D shape correspondence and 3D shape registration will be reviewed.

\section{3D geometric deformation}
 Geometric deformation is a fundamental and deeply researched topic in the field of computation geometry. It has important application in a lot of areas, for example computer animation, movie industry, virtual surgery, shape registration and so on. A multitude of works have been published aiming at this issue. According to the survey \cite{botsch2008linear}, the deformation methods can be generally divided into two categories:
 \begin{itemize}
\item Linear deformation;
\item Nonlinear deformation;
\end{itemize}

\subsection{Linear deformation}
"Linear" means the main ingredient of the deformation algorithm is a global quadratic variational minimization problem, however, the variational minimization of a quadratic functional is achieved by solving a linear system of equations. The advantage of linear deformation methods are three-folds: first, they are fast, especially when the associated linear system is sparse. The availability of highly-optimized sparse linear solvers makes linear techniques very efficient, and at the same time simple to implement. In addition, linear methods are robust: when appropriate boundary conditions are used, the quadratic energy has a unique global minimum. Moreover, most methods are formulated in such a way that the resulting deformed surface is a smooth function of the modeling constraints, thus a slight perturbation of the constraints changes the resulting surface only by little.

Shape deformation techniques fall roughly into two categories. One is to deform the shape while taking its structure into account, the other is to deform the space in which the target shape is embedded. Therefore, linear deformation methods can be further divided into linear surface-based deformation and linear space deformation.
\subsubsection{Linear surface-based deformation}
Shell-based deformation requires the minimization of the elastic energy subject to user-defined boundary constraints. The elastic energy measures how much the object has been deformed from its initial configuration, which is the main requirement for physically based surface deformations. Although, for solid objects, this energy basically considers local stretching within the object, for two-manifold surfaces (so-called thin shells), an additional bending term is required. The design of high quality surfaces is typically based on a constrained minimization of curvature energies \cite{welch1992variational,moreton1992functional}, which results in thin-plate surfaces with planar rest states. Similarly, high quality physically-based deformations minimize stretching and bending under deformation constrains, which corresponds to thin-shell models of non-planar rest states \cite{terzopoulos1987elastically,celniker1991deformable}. Deformation based on a discretization of variational bending energy minimization is mathematically understood and yields smooth and tangent-continuous deformations \cite{guskov1999multiresolution,kobbelt1998interactive,botsch2004intuitive,bickel2008pose}. However, since for these approaches all computations and linearizations are performed w.r.t. a fixed reference mesh, large deformations might lead to shape distortions.

To correctly deform fine surface details, the above methods require a multi-scale decomposition, which splits a surface into a smooth base surface (low frequencies) and displacement vectors (high frequencies). Multiresolution deformation changes the smooth base surface and adding the details back onto it then yields the desired multi-scale deformation \cite{kobbelt1999multiresolution}. In particular, \cite{kobbelt1998interactive} introduces a mesh deformation technique by solving a constrained minimization of the thin-plate energy at a desirable coarse resolution. The user specifies deformation constraints through a handle polygon. Original mesh details are added back to the resulting smooth mesh to produce a final solution. This technique only gives the user limited control over the mesh shape through sparse constraints on the handle polygon. The rest of the mesh geometry is uniquely determined by the minimization. Displacement volumes \cite{botsch2003multiresolution} encode the high frequencies by prism elements enclosed between the original and the base surface, which avoids detail distortion, but comes at the considerably higher cost of a non-linear detail reconstruction. Although both representation (displacement vectors/volumes) can be combined with any underlying deformation technique, the required multiscale decomposition can become quite involved for geometrically or topologically complex models.

To avoid the multi-scale decomposition, other methods modify differential surface properties instead of its spatial coordinates, and then solve a linear Poisson system for a deformed surface with the desired differential coordinates \cite{lipman2004differential,sorkine2004laplacian,yu2004mesh,zayer2005harmonic,lipman2005linear}. From this class, the methods of \cite{yu2004mesh,zayer2005harmonic} use gradients of affine deformations, i.e., their rotation and scale/shear components, for transforming surface gradients, similar to \cite{sumner2004deformation,sumner2005mesh}. As a consequence, these methods work well for rotations, but are insensitive to translations: Adding a translation to a given deformation does not change its gradient, and thus has no influence on the resulting surface gradients. But since even pure translations induce local rotations of tangent planes,these methods are counter-intuitive for modifications containing large translations. Although a special treatment of pure translations might be possible, deformations containing rotations and translations remain problematic. In contrast, the shape editing approach of \cite{sorkine2004laplacian} aims to preserve the differential coordinates or Laplacian coordinates. It implicitly solves for local rotations of vertex neighborhoods, but due to linearizations their method has problems with large rotations, as was shown in their follow-up paper \cite{lipman2005linear}. In that paper, Lipman et al. minimize bending by preserving relative per-vertex orientations. They first solve a linear system for per-vertex orientations, and from those reconstruct vertex positions in a second step. Since the first system does not consider position constraints, their technique also neglects the connection between translations and rotations, it exhibits the same translation-insensitivity as gradient-based methods.

\subsubsection{Linear space deformation}
The need for low-dimensional control of deformation fields was identified early in computer graphics. Among the first approaches was Free-Form Deformation \cite{sederberg1986free}, which relied on regular lattices to specify spatial deformations. It parameterizes a space deformation with a 3D lattice and provides an efficient way to apply coarse deformations to complex shapes. However, achieving a fine-scale deformation may require a detailed, hand-designed control lattice \cite{coquillart1990extended,maccracken1996free} and an inordinate amount of user manipulation. Although more intuitive control can be provided through direct manipulation \cite{hsu1992direct}, the user is still restricted by the the expressibility of the FFD algorithm. With their "Wires" concept, \cite{singh1998wires} present a flexible and effective space deformation algorithm motivated by armatures used in traditional sculpting. A collection of space curves tracks deformable features of an object, providing a coarse approximation to the shape and a means to deform it. \cite{singh2000skinning} generalize this concept to a polygon-based deformer. \cite{botsch2005real} use triharmonic radial basis functions for real-time freeform shape editing. An incremental least-squares method is introduced to approximately solve the involved linear systems in a robust and efficient manner.

Cage-based deformation methods were an important step forward, because control polytopes offer much better adaptability to the input shapes. The underlying theme of many cage-based methods is to generalize barycentric coordinates from simplices to general polytopes. Mean value coordinates (MVC) for closes polyhedrons \cite{ju2005mean} offer many desirable properties and can be calculated using closed-form expressions, but are not fully shape-aware. This shortcoming has been addressed b harmonic coordinates \cite{joshi2007harmonic}. \cite{lipman2007gpu} introduce positive mean value coordinates (PMVC). Unlike the MVC, the modified coordinates are unconditionally positive, and require only a local computation. The methods mentioned above are affine-invariant and not shape-preserving. \cite{lipman2008green} introduce green coordinates for closed polyhedral cages. It does not only dependent on vertex-based basis, but also on the cage faces, which leads to space deformations with a shape-preserving property. While many new intriguing coordinates and their underlying mathematical properties have been studied in recent years \cite{hormann2008maximum,weber2011complex,li2013poisson}, a problem common to all cage-based method remains: the design of control cages requires experience with polygonal modeling. Any change, such as adding or deleting vertices, requires the user to update the cage connectivity.

\subsection{Nonlinear deformation}
In the most intuitive setting the surface deformation problem is inherently non-linear, because it requires deducing local rotations of the surface based on position displacements. Therefore, a linear method can only provide an approximate result, or a compromise must be made in terms of the problem setup, e.g., requiring more complex interactive input from the user. The inherent limitations of linear methods motivated us to investigate non-linear deformation techniques. Similar to linear deformation methods, Nonlinear deformation can be roughly classified into nonlinear surface-based deformation and nonlinear space deformation.

\subsubsection{Nonlinear surface-based deformation}
Pyramid coordinates \cite{kraevoy2004cross,kraevoy2005template} can be considered nonlinear versions of Laplacian coordinates, leading to differential coordinates invariant under rigid motions, which can be used for deformation as well as for morphing. Huang et al. employ a nonlinear version of the volumetric graph Laplacian, which also features nonlinear volume preservation constraints \cite{huang2006subspace}. In order to increase the performance and efficiency of their optimization, they use a subspace approach: the original mesh is embedded in a coarse control cage, and the optimization is performed on the cage vertices while considering the constraints from the original mesh vertices in a least-squares manner. An alternative approach to subspace methods is the handle-aware isoline technique of \cite{au2007handle}. In a preprocessing step one constructs a set of iso-lines of the geodesic distance from either the fixed regions or the handle regions, similar in spirit to \cite{zayer2005harmonic}. For each of these iso-lines, a local transformation for a Laplacian-based deformation is found by a nonlinear optimization. The number of required iso-lines is relatively small, which guarantees an efficient numerical optimization and thereby allows for interactive editing. Shi et al. combine Laplacian-based deformation with skeleton-based inverse kinematics \cite{shi2007mesh}. Their approach allows for easy and intuitive character posing, featuring control of lengths, rigidity and joint limits, but it in turn requires a complex cascading optimization for the involved nonlinear energy minimization. PriMo \cite{botsch2006primo} is a nonlinear version of the shell-based minimization of bending and stretching energies. The surface is modeled as a thin layer of triangular prisms, which are coupled by a nonlinear elastic energy. During deformation the prisms are kept rigid, which allows for a robust geometric optimization. A hierarchical optimization is used to increases the computational efficiency.

\citep{sorkine2007rigid} propose a surface deformation based on the as-rigid-as-possible (ARAP) energy. The ARAP energy measures the local deviation of the differential of a mapping between two shapes from rigidity. The discrete cell adopted in this work is spokes. This method requires the use of a positive weighting scheme to guarantee the correct minimization of the energy. \citep{chao2010simple} take into account all the opposite edges in the triangles incident to a vertex, the discrete cell in their work is a spokes and rims. Compared with ARAP deformation, this technique is guaranteed to always correctly minimize the energy even if the the weights are negative. However, the discretization of \citep{chao2010simple} is only \emph{consistent} for volumetric case with tetrahedron cells in 3D or parameterization with triangle cells in 2D, it is not \emph{consistent} for the surface case with spokes and rims cells in 3D. In order to come up with a \emph{consistent} discretization for surface in 3D, \citep{levi2015smooth} introduce a new ARAP-type energy, named SR-ARAP (ARAP with smooth rotations), they add a bending term onto the ARAP energy to enable the discretization \emph{consistent}, which achieves results with quality that competes with the volume deformation.

\subsubsection{Nonlinear space deformation}
Sumner et al. compute detail-preserving space deformations by formulating an energy functional that explicitly penalizes deviation from local rigidity by optimizing the local deformation gradients to be rotations \cite{sumner2007embedded}. In addition to static geometries, their method can also be applied to hand-crafted animations and precomputed simulations. Botsch et al. extend the PriMo framework \cite{botsch2006primo} to deformations of solid objects \cite{botsch2007adaptive}. The input model is voxelized in an adaptive manner, and the resulting hexahedral cells are kept rigid under deformations to ensure numerical robustness. The deformation is governed by a nonlinear elastic energy coupling neighboring rigid cells. Another class of approaches uses divergence-free vector fields to deform shapes \cite{angelidis2006swirling,von2006vectort}. The advantage of those techniques is that by construction they yield volume-preserving and intersection-free deformations. As a drawback, it is harder to construct vector fields that exactly satisfy user-defined deformation constraints.

\cite{muller2005meshless} present meshless deformations based on shape matching. Instead of using the vertex connection information, they divide the set of vertices into clusters. Afterwards, affine transformations can be applied on each clusters. Based on this work, \cite{rivers2007fastlsm} introduce fast lattice shape matching for real-time deformation. Since the naive method can be very slow for stiff models - per-vertex costs scale cubically with region width - they exploit the inherent summation redundancy of shape matching and provide large-region matching at constant per-vertex cost. With this approach, large lattices can be simulated in linear time.

\cite{jacobson2013algorithms} introduces the harmonic, biharmonic, triharmoic equations w.r.t. surface displacement fields correspond to minimizers of the Dirichlet, Laplacian, Laplacian gradient energies. They offer a detail derivation to obtain a linear system to solve this second-order elliptic partial differential equation. \cite{weber2007context} uses harmonic functions that are provably monotonic and bounded but have only $C^0$ smoothness near constrained boundary. Bounded biharmonic weights are proposed in~\cite{jacobson2011bounded} to minimize the Laplacian energy subject to bound constraints. They spreads the influences of the controls in a shape-aware and localized manner, even for objects with complex and concave boundaries. \cite{jacobson2010mixed} use mixed finite elements to provide a discretization for biharmonic and triharmonic equations on meshes. They factorize the original equations into low-order equations by introducing additional variables, and introduce lumping mass matrices to eliminate unneeded variables. Their minimizers exhibit increasing orders of continuity but lose the maximum principle and show oscillations. \citep{jacobson2012smooth} propose smooth shape-aware functions with controlled extrema. They provide a framework for minimizing quadratic energies on manifolds while constraining the solution to obey the maximum principle in the solved region.



\section{3D shape registration}
Establishing a meaningful shape correspondence is a fundamental task in geometry processing. In application such as object recognition, statistical shape modeling, shape morphing, and deformation transfer, shape correspondence is often the first step. In this section, we will give an overview of correspondence problems from three point of views: similarity-based correspondence, rigid alignment and non-rigid alignment.

\subsection{Similarity-based correspondence} One of the most fundamental ways of computing a correspondence is to estimate the similarity between pairs of shape elements or feature points collected from the shapes and derive a correspondence from those estimates, which is sometimes called the feature matching approach. The elements are commonly characterized by shape descriptors. A correspondence is then obtained by selecting assignments between pairs of elements while optimizing an objective function composed of two terms. The first term seeks to maximize the similarity between the descriptors of corresponding elements, while the second term seeks to minimize the distortion that would be i ntroduced in the shapes if they were deformed to align their corresponding elements. However, the second term can be estimated without the need to explicitly align the shapes. Ideally, satisfying these objectives should translate into a solution that is geometrically or semantically meaningful. Such a solution is typically obtained with a standard optimization method (e.g., quadratic programming).

Feature matching can be applied in any context where it is possible to compute a set of descriptors for the elements. Example applications include registration of 3D scans \cite{castellani2008sparse} and deforming surfaces \cite{anguelov2005correlated}, or skeleton matching \cite{biasotti2006sub}. Moreover, this approach is not restricted to its own domain and can be combined with alignment-based approaches to provide a proper initialization to these methods \cite{rusinkiewicz2001efficient}, or to restrict the size of the solution space \cite{gelfand2005robust,kin2010electors,chang2008automatic,aiger20084}.

\subsection{Rigid alignment} Under certain assumptions, it is possible to pose the correspondence problem as finding a geometric transformation that aligns the shapes. One example application is the rigid alignment of geometry scans used for shape acquisition. The goal here is to capture a real-world static 3D shape and obtain its digital representation. However, it may not be possible to capture the entire object in a single scanning pass due to self-occlusions and physical constraints of the scanner, so it might become necessary to acquire multiple scans and optimally align them to reconstruct the full object \cite{turk1994zippered,rusinkiewicz2001efficient,gelfand2005robust,aiger20084}. The key characteristic of the rigid alignment problem is that the objects do not change from one scanning pass to another. Thus, it is assumed that each scan can be transformed with a single rigid transformation in order to align it perfectly with the other scans. Rigid transformations comprise mainly translations and rotations, and one of their important characteristics is that they reside in a low-dimensional space.

Scan alignment is just one example of many applications that rely on the assumption of rigidity in the datasets. If the input shapes are given as sets of 3D points, the problem of rigid alignment can be posed as: for each point set, find the rigid transformation that maximizes the number of points in the set that align to points in the other sets. This goal is usually dependent on a threshold that indicates when two points are close enough and can be considered as matching to each other \cite{irani1999combinatorial}. Since finding the best aligning transformation might be an involved task, the feature matching approach can be brought in to aid in the search for the optimal alignment.

\subsection{Non-rigid alignment} Sometimes it might be necessary to li ft the assumption that each scan can be perfectly aligned with a rigid transformation, e.g., when large amounts of noise are present in the scans. More significant examples of datasets that cannot be perfectly aligned with a rigid transformation include the correspondence of articulated shapes \cite{elad2003bending,anguelov2005correlated,jain2007non,chang2008automatic,huang2008non}, where certain parts of the shapes can bend independently, the correspondence of anatomical shapes (e.g, organs) \cite{audette2000algorithmic}, which can deform in an elastic manner and introduce stretching to localized portions of the shape, and finally the correspondence between shapes with different geometries but that represent a same class of objects or which have parts that are semantically related \cite{allen2003space,zhang2008deformation}. In the latter case, we can see the problem as that of establishing a correspondence between shapes that can differ in both local stretching and bending.

In this setting, it become necessary to add more freedom to how the shapes can be brought into correspondence. This can be achieved by generalizing two aspects of the problem. First, non-rigid (possibly non-linear) transformations can be taken into consideration, e.g., thin-plate splines \cite{chui2003new}. Secondly, these transformations can be applied separately to local portions of the shape. For example, the transformation applied to a shape can be represented as a set of displacement vectors ( one per shape vertex) \cite{pauly2005example}. Then, finding the best transformation amounts to computing the displacements that bring each vertex in correspondence with the target shape. The distinction to the rigid case is that the space of geometric transformations being considered is now inherently high-dimensional.

\subsection{2D Landmark Detection Summary}
To summarize, facial landmark detection and localization in images and videos in the wild are a crucial part of reconstructing 3D faces, my research investigate these methods and focuses on facial landmark detection on large view point variations. A method is proposed which project the training image samples into separate feature spaces to train more discriminative models for different view points.

\section{3D shape registration}
3D registration is an active research topic in computer graphics and computer vision \cite{}. The goal of 3D registration is to find a mapping between the given template and target in order to optimally transforms the template onto the target. Shape registration methods can fall roughly into 3 classes: rigid, isometric, non-isometric.

\subsection{Rigid registration}
The purpose of rigid registration is to find a global rigid transformation that aligns two shapes. The most classic algorithms for rigid registration are Iterative Close Point (ICP) \cite{besl1992method} and its variants \cite{rusinkiewicz2001efficient}. ICP alternates between searching correspondences by choosing closest points on the target w.r.t. the points on the template and computing a rigid transformation to response the correspondences. The results closely dependent on the initial position and orientation of the shapes, large distance between them tend to produce unstable correspondence and ICP is susceptible to converge to local minimum. Aiming to solve this problem, \cite{gelfand2005robust,huang2006reassembling} initially approximate the optimal transformation via feature matches, this approximation can be fed into ICP to improve the converge accurate and rate. Another shortage of ICP is that it is sensitive to noise and outliers which often appear in 3D scans. To tackle this issue, \cite{bouaziz2013sparse} put forward a new variant of ICP algorithm with sparsity-inducing norms, successfully eliminating the affect of the noise and outlier and obtaining superior results.

\subsection{Isometric registration}
Isometric registration is to solve a local rigid transformation for each vertex on the template in order to align the template onto the target. \cite{li2008global} propose a isometric registration algorithm for partial scans of deforming shapes within a single non-linear optimization. The rigid energy term they adopted penalizes the deviation of each local transformation from a pure rigid motion, which is only composed of rigid and orientation transformation. \cite{qixing2008non} regard isometric registration as an optimization problem. To solve this problem, they alternate between correspondence searching and deformation calculation. Under the assumption of local rigid deformation, robust correspondence are obtained via a pruning mechanism based upon consistency in geodesic distance. \cite{chang2008automatic} convert the isometric registration problem into a discrete labeling problem. They first sample the motion explicitly, which provides a priori set of possible rigid transformation between articulate parts of shapes, then finding an optimal assignment of transformation to each part of shapes. \cite{tevs2009isometric} propose a global isometric matching approach based on a novel RANSAC-like randomized sampling algorithm. This method is robust to topological noise and is able to output matching alternatives by sampling the space of plausible solutions. \cite{maron2016point} approximate the global minimum of the procrustes matching problem with convex relaxation for non-rigid isometric and near-isometric shape matching problem.

\subsection{Non-isometric registration}
Non-isometric registration are a wide range of topics including all kinds of registration are not isometric. Here we only focus on techniques related to our work: similar registration,  



\subsection{3D Facial Mesh Reconstruction Summary}
To summarize, 3D facial geometry reconstruction and performance capture from 2D sources are challenging mainly because of the depth ambiguity and limited expressiveness of the prerecorded blendshapes. This research will propose a novel method to incorporate person specific details into the tracking and reconstruction process to achieve more convincing and realistic result.

\ifx\isEmbedded\undefined
% References
\addcontentsline{toc}{chapter}{References}
\pagebreak
\end{document}
\fi
